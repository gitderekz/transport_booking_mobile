
-------------------------------------------------
Tafsiri:
Driver

-------------------------------------------------

ruhusu bula tarehe
kutafuta kwenye machaguo
malipo
jisajili
thibitisha
risiti
njia maarufu
safari za karibuni
angalia taarifa zaidi

kielekezi cha chini kurasa za ndani
badili wasifu
sitisha tiketi

-------------------------------------------------


Thank you so much now lets solve the problem
When refreshing the page and call endpoint; /api/transports/1/routes/1/seats

WHERE IT CALLS API THROUGH
  Future<Either<Failure, List<List<Map<String, dynamic>>>>> getSeatArrangement({
    required String transportId,
    String? routeId,
  }) async {
    try {
      final response = await apiService.get(
          routeId != null
              ? '/transports/$transportId/routes/$routeId/seats'
              : '/transports/$transportId/seats'
      );

      if (response['data'] == null) {
        return Left(Failure(message: 'No seat data available'));
      }

      print('MAJIBU: ${response.toString()}');
      // Parse the seat arrangement
      final seatArrangement = (response['data'] as List)
          .map((row) => (row as List).map((seat) => Map<String, dynamic>.from(seat)).toList())
          .toList();

      return Right(seatArrangement);
    } catch (e) {
      return Left(Failure(message: e.toString()));
    }
  }

AND I GET PRINTOUT
print('MAJIBU: ${response.toString()}'); = MAJIBU: {success: true, data: {transport_id: 1, route_id: 1, seat_layout: {rows: 10, columns: 5, layout: 3-2, seats: [{number: 1A}, {number: 1B}, {number: 1C}, {number: 1D}, {number: 2A}, {number: 2B}, {number: 2C}, {number: 2D}, {number: 3A}, {number: 3B}, {number: 3C}, {number: 3D}, {number: 4A}, {number: 4B}, {number: 4C}, {number: 4D}, {number: 5A}, {number: 5B}, {number: 5C}, {number: 5D}, {number: 6A}, {number: 6B}, {number: 6C}, {number: 6D}, {number: 7A}, {number: 7B}, {number: 7C}, {number: 7D}, {number: 8A}, {number: 8B}, {number: 8C}, {number: 8D}, {number: 9A}, {number: 9B}, {number: 9C}, {number: 9D}, {number: 10A}, {number: 10B}, {number: 10C}, {number: 10D}]}, seat_arrangement: [[{seat_number: 1A, booked: true, passenger_name: John Doe, passenger_gender: male, pickup_stop_name: Dar es Salaam, dropoff_stop_name: Singida}, {seat_number: 1B, booked: true, passenger_name: John Doe, passenger_gender: male, pickup_stop_name: Dar es Salaam, dropoff_stop_name: Singida}, {seat_number: 1C, booked: true, passenger_name: John Doe, passenger_gender: male, pickup_stop_name: Dar es Salaam, dropoff_stop_name: Singida}, {seat_number: 1D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 1E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 2A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 2B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 2C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 2D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 2E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 3A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 3B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 3C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 3D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 3E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 4A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 4B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 4C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 4D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 4E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 5A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 5B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 5C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 5D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 5E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 6A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 6B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 6C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 6D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 6E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 7A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 7B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 7C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 7D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 7E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 8A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 8B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 8C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 8D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 8E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 9A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 9B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 9C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 9D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 9E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}], [{seat_number: 10A, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 10B, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 10C, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 10D, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}, {seat_number: 10E, booked: false, passenger_name: null, passenger_gender: null, pickup_stop_name: null, dropoff_stop_name: null}]]}}




THIS CAUSES AN ERROR _type<String, dynamic> is not a subtype of type Lit<dynamic>


GIVEN lib/config/routes.dart











































-------------------------------------------------

I have a python script that analyse my .txt file

BELOW IS EXAMPLE OF MY .txt file
INPUTS DATA EXPORT

Total Records: 1239

ID: 1260
Reference Number: 14483
Date Taken: 2025-05-25
Grower ID: 10573
Status: Synced
Inputs:
  - Jute Twine: 2 Kg (Value: 18000)
------------------------------------

ID: 1259
Reference Number: 14482
Date Taken: 2025-05-25
Grower ID: 10572
Status: Synced
Inputs:
  - Jute Twine: 2 Kg (Value: 18000)
------------------------------------

ID: 1258
Reference Number: 14481
Date Taken: 2025-05-25
Grower ID: 10571
Status: Synced
Inputs:
  - Jute Twine: 2 Kg (Value: 18000)
------------------------------------





BELOW IS MY PYTHON CODE

import csv
import re
from collections import defaultdict
import os

# Optional Excel support
try:
    import openpyxl
    from openpyxl import Workbook
    excel_enabled = True
except ImportError:
    excel_enabled = False
    print("openpyxl not installed: Excel export will be skipped.")

filename = "ayii-inputs_export_1749647176840.txt"

with open(filename, "r", encoding="utf-8") as f:
    lines = f.readlines()

records = []
current = {}

for line in lines:
    line = line.strip()

    if line.startswith("ID:"):
        current["id"] = int(line.split(":")[1].strip())
    elif line.startswith("Reference Number:"):
        current["ref"] = line.split(":")[1].strip()
    elif line.startswith("Date Taken:"):
        current["date"] = line.split(":")[1].strip()
    elif line.startswith("Grower ID:"):
        current["grower_id"] = line.split(":")[1].strip()
    elif line.startswith("Status:"):
        current["status"] = line.split(":")[1].strip()
    elif "Value:" in line:
        # Match pattern like: Urea: 25 Kg (Value: 87500)
        match = re.search(r'(.+): (\d+) Kg \(Value:\s*([\d]+)\)', line)
        if match:
            current["input_type"] = match.group(1).strip()
            current["quantity"] = int(match.group(2))
            current["value"] = int(match.group(3))
    elif line.startswith("-" * 5) and current:
        records.append(current)
        current = {}

# Group by grower_id
grouped = defaultdict(lambda: {"count": 0, "quantity": 0, "value": 0})

for r in records:
    gid = r["grower_id"]
    grouped[gid]["count"] += 1
    grouped[gid]["quantity"] += r.get("quantity", 0)
    grouped[gid]["value"] += r.get("value", 0)

# Prepare rows
rows = []
total_quantity = 0
total_value = 0

for idx, (gid, data) in enumerate(sorted(grouped.items(), key=lambda x: int(x[0])), 1):
    rows.append([idx, gid, data["count"], data["quantity"], data["value"]])
    total_quantity += data["quantity"]
    total_value += data["value"]

rows.append(["", "TOTAL", "", total_quantity, total_value])

# Output CSV
csv_file = "grower_summary.csv"
with open(csv_file, "w", newline="", encoding="utf-8") as f:
    writer = csv.writer(f)
    writer.writerow(["Index", "Grower ID", "Total Records", "Total Quantity", "Total Value"])
    writer.writerows(rows)

print(f"✅ CSV saved: {csv_file}")

# Output Excel
if excel_enabled:
    excel_file = "grower_summary.xlsx"
    wb = Workbook()
    ws = wb.active
    ws.title = "Grower Summary"
    ws.append(["Index", "Grower ID", "Total Records", "Total Quantity", "Total Value"])
    for row in rows:
        ws.append(row)
    wb.save(excel_file)
    print(f"✅ Excel saved: {excel_file}")
else:
    print("ℹ️ Skipped Excel export — openpyxl not installed.")




---> This script helps to generate csv and excel files for now with columns [index, grower id, total record,total quantity, total value]
but i want to add more column for[ input quantity, input names, payload]

The payload should look like this
{id: null, season_id: 1, debtor_type: 1, debtor_id: 9256, number: 38136, dateTaken: 2025-03-25,
    inputs: [
        {"id":11,"package_id":1,"quantity":"1","value":"0"},
        {id: 11, package_id: 1, quantity: 1, value: 0},
        {id: 15, package_id: 1, quantity: 1, value: 0},
        {id: 4, package_id: 1, quantity: 1, value: 0},
        {id: 5, package_id: 1, quantity: 100, value: 350000},
    ]
}

WHERE;
id = null,
season_id = 1,
debtor_type = 1,
debtor_id = Grower ID,
number = Reference Number,
dateTaken = Date Taken

AND ON INPUTS, GIVEN EXAMPLE
Inputs:
        - Jute Twine: 2 Kg (Value: 18000)
Inputs->name = Jute Twine
Inputs->quantity = 2
Inputs->unit = Kg
Inputs->value = 18000

THEREFORE THE PAYLOAD:

inputs: [
        {
        "id" = Inputs->name,
        "package_id" = 1,
        "quantity" = Inputs>quantity,
        "value" = Inputs->value
        },
    ]



let us add those columns please
------------------------------------



